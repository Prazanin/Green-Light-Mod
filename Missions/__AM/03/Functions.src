export function ReturnEsther;
begin
  Case BioCollected of
  1: begin
     SetSide(Esther, 7);
     Say(Esther, 'D3d-Esther-1a');
     end;
  2: begin
     SetSide(Esther, 7);
     Say(Esther, 'D3d-Esther-2a');
     end;
  3: begin
     SetSide(Esther, 7);
     Say(Esther, 'D3d-Esther-3a');
     ChangeMissionObjectives('MEstherAll');
     SetTech(Tech_Bio1, 7, state_enabled);
     SetTech(Tech_Bio2, 7, state_enabled);
     SetTech(Tech_Bio3, 7, state_enabled);
     Say(Simone, 'D3e-Simone-1');
     Say(Esther, 'D3e-Esther-1');
     Say(Simone, 'D3e-Simone-2');
     end;
  end;
end;

Export Function SortBySkill(units, class);
var i, tmp;
begin
if not units or not class in [1, 2, 3, 4] then
   exit;

tmp := [];

for i in units do
    tmp := Insert(tmp, tmp+1, GetSkill(i, class));

if not tmp then
   exit;

result := SortListByListDesc(units, tmp);
End;

Export Function SaySex(unit, dialogM, dialogF);
begin
if not unit then
   exit;

Say(unit, [dialogM, dialogF][GetSex(unit)]);
End;

Export function GenerateVehicleAttack(side, mapSide, vehCount);
var i, j, un, genPos, movePos, arChassisTab, veh, vehGroup, WeaponChosen;
begin

  arChassisTab:=[];

  Case mapSide of
  1: begin
         genPos:=[89, 3, 2];
         movePos:=[100, 28];
         uc_direction := 2;
         end;
  2: begin
         genPos:=[180, 85, 4];
         movePos:=[130, 85];
         uc_direction := 4;
         end;
  3: begin
         genPos:=[148, 156, 0];
         movePos:=[133, 110];
         uc_direction := 0;
         end;
  end;

  for i = 1 to vehCount do
  begin
        uc_side = side;
        uc_nation = 2;

        if mapSide = 0 then
             Case Rand(1,3) of
             1: begin
                genPos:=[89, 3, 2];
                movePos:=[100, 28];
                uc_direction := 2;
                end;
             2: begin
                genPos:=[180, 85, 4];
                movePos:=[130, 85];
                uc_direction := 4;
                end;
             3: begin
                genPos:=[148, 156, 0];
                movePos:=[133, 110];
                uc_direction := 0;
                end;
             end;

        vc_engine = engine_siberite;
        vc_control = control_manual;
        WeaponChosen = ARWeapons[Rand(1, ARWeapons)];
        vc_weapon = WeaponChosen;

            IF WeaponChosen = 24 or WeaponChosen = 22 or WeaponChosen = 23 or WeaponChosen = 30 then
            begin
                arChassisTab = [12,13,14];
                vc_control = control_manual;
                vc_chassis = arChassisTab[Rand(1, arChassisTab)];
            end;

            IF WeaponChosen = 28 or WeaponChosen = 27 or WeaponChosen = 26 or WeaponChosen = 25 then
            begin
                arChassisTab = [13,14,16];
                vc_control = control_manual;
                vc_chassis = arChassisTab[Rand(1, arChassisTab)];
            end;

            IF WeaponChosen = 29 then
            begin
                arChassisTab = [16];
                vc_control = control_apeman;
                vc_chassis = arChassisTab[Rand(1, arChassisTab)];
            end;

            IF WeaponChosen = 72 or WeaponChosen = 71 then
            begin
                arChassisTab = [16];
                vc_control = control_manual;
                vc_chassis = arChassisTab[Rand(1, arChassisTab)];
            end;

        veh = CreateVehicle;
        vehGroup = vehGroup ^ veh;
        PlaceUnitXYR(veh, genPos[1], genPos[2], genPos[3], false);

        IF vc_control = 1 then
        begin

            hc_gallery = '';
            hc_name = '';
            PrepareHuman(false, 3, ARMechSkill);

            un = CreateHuman;
            PlaceHumanInUnit(un, veh);

        end;
        ComMoveXY(veh, movePos[1], movePos[2]);
        wait(0$3);
  end;
  wait(0$5);
  attack_group = attack_group ^ vehGroup;
end;

Export function RespawnAttackInfantry(side, nation, soldierCount, sniperCount, bazookCount, mortarCount, medicCount, skil, spawnArea);
var i, j,  un, damageUnit_list, enemyUnits, und;
begin

        for i = 1 to medicCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 4, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);
        end;


       for i = 1 to soldierCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 1, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);
                attack_group = attack_group ^ un;
        end;

        for i = 1 to sniperCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 5, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);
                attack_group = attack_group ^ un;
        end;

        for i = 1 to bazookCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 9, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);
                attack_group = attack_group ^ un;
        end;

        for i = 1 to mortarCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 8, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);
                attack_group = attack_group ^ un;
        end;

end;

export ConvoyGroup, ConvoyGroup2, ConvoyGroupBoth;

export function PrepareConvoy(mapSide, solds, vehCombat, vehTransport, ARWeaponsConvoy, convoyNumber);
var i, j, un, veh, arChassisTab, genArea;
begin
  Case mapSide of
  1: begin
     genArea:=ConvoyNorth;
     uc_direction:=2;
     end;
  2: begin
     genArea:=ConvoyEast;
     uc_direction:=4;
     end;
  3: begin
     genArea:=ConvoySouth;
     uc_direction:=0;
     end;
  end;

  for i = 1 to solds do
  begin
    uc_side = 8;
    uc_nation = 2;

    hc_gallery = '';
    hc_name = '';
    PrepareHuman(sex_male, 1, ARSolSkill);

    un = CreateHuman;
    PlaceUnitArea(un, genArea, false);
    case convoyNumber of
    1: ConvoyGroup := ConvoyGroup ^ un;
    2: ConvoyGroup2 := ConvoyGroup2 ^ un;
    end;
  end;

  for i = 1 to vehCombat do
  begin
    uc_side = 8;
    uc_nation = 2;

    vc_engine = engine_siberite;
    vc_control = control_manual;
    vc_weapon = ARWeaponsConvoy[Rand(1, ARWeaponsConvoy)];

        for j = 1 to ARWeapons do
        begin

            IF ARWeaponsConvoy[j] = 24 or ARWeaponsConvoy[j] = 22 or ARWeaponsConvoy[j] = 23 or ARWeaponsConvoy[j] = 30 then
            begin
                arChassisTab = [13,14];
                vc_chassis = arChassisTab[Rand(1, arChassisTab)];
            end;

            IF ARWeaponsConvoy[j] = 28 or ARWeaponsConvoy[j] = 27 or ARWeaponsConvoy[j] = 26 or ARWeaponsConvoy[j] = 25 then
            begin
                arChassisTab = [14,16];
                vc_chassis = arChassisTab[Rand(1, arChassisTab)];
            end;

            IF ARWeaponsConvoy[j] = 72 or ARWeaponsConvoy[j] = 71 then
            begin
                arChassisTab = [16];
                vc_chassis = arChassisTab[Rand(1, arChassisTab)];
            end;

        end;

    veh = CreateVehicle;

    hc_gallery = '';
    hc_name = '';
    PrepareHuman(sex_male, 3, ARMechSkill);

    un = CreateHuman;
    PlaceHumanInUnit(un, veh);
    PlaceUnitArea(veh, genArea, false);
    case convoyNumber of
    1: ConvoyGroup := ConvoyGroup ^ veh;
    2: ConvoyGroup2 := ConvoyGroup2 ^ veh;
    end;
  end;

  for i = 1 to vehTransport do
  begin
    uc_side = 8;
    uc_nation = 2;

    vc_engine = engine_siberite;
    vc_control = control_manual;
    vc_weapon = ar_cargo_bay;
    vc_chassis = ar_half_tracked;

    veh = CreateVehicle;

    case Rand(1,5) of
    1: begin
       AddCargo(veh, mat_cans, 80);
       AddCargo(veh, mat_siberit, 20);
       end;
    2: begin
       AddCargo(veh, mat_cans, 50);
       AddCargo(veh, mat_oil, 30);
       AddCargo(veh, mat_siberit, 20);
       end;
    3: begin
       AddCargo(veh, mat_cans, 50);
       AddCargo(veh, mat_oil, 50);
       end;
    4: begin
       AddCargo(veh, mat_cans, 40);
       AddCargo(veh, mat_oil, 40);
       AddCargo(veh, mat_siberit, 20);
       end;
    5: begin
       AddCargo(veh, mat_cans, 60);
       AddCargo(veh, mat_oil, 20);
       AddCargo(veh, mat_siberit, 20);
       end;
    end;
    hc_gallery = '';
    hc_name = '';
    PrepareHuman(sex_female, 3, ARMechSkill);

    un = CreateHuman;
    PlaceHumanInUnit(un, veh);
    PlaceUnitArea(veh, genArea, false);
    case convoyNumber of
    1: ConvoyGroup := ConvoyGroup ^ veh;
    2: ConvoyGroup2 := ConvoyGroup2 ^ veh;
    end;
  end;
end;

Export Function PlaceUnitInBunker(un, b);
var dir;
begin
dir := GetDir(b);

if dir < 3 then
   dir := dir + 3
    else
      dir := dir - 3;

SetDir(un, dir);
PlaceHumanInUnit(un, b);
End;

Export Function Garrison_Enemy_Base;
var i,j,l,lab,warehouse,breastworks,occupation,man,filter;
begin
lab := FilterAllUnits([[f_side,8],[f_btype,b_lab_half]]);
warehouse := FilterAllUnits([[f_side,8],[f_btype,b_warehouse]]);
breastworks := FilterAllUnits([[f_side,8], [f_btype, b_breastwork]]);

uc_side=8;
uc_nation= nation_arabian;
  for i=1 to lab do
   begin
    if IsInUnit(lab[i])=0 then
       begin
          occupation=2;
          for j=1 to occupation do
            begin
            PrepareScientist(0, ARSolSkill);
            man= CreateHuman;
              PlaceHumanInUnit(man, lab[i]);
            end;
        end;
   end;
  for i=1 to warehouse do
   begin
    if IsInUnit(warehouse[i])=0 then
       begin
          occupation=3;
          for j=1 to occupation do
            begin
            PrepareEngineer(1, ARSolSkill);
            man= CreateHuman;
              PlaceHumanInUnit(man, warehouse[i]);
            end;
        end;
   end;
   for i = 1 to breastworks do
       if IsInUnit(breastworks[i])=0 then
        begin
           PrepareSoldier(1, ARSolSkill);
           hc_class:=class_mortar;
           man := CreateHuman;
           PlaceUnitInBunker(man, breastworks[i]);
        end;

   for i in FilterAllUnits([[f_side, 8], [f_btype, b_bunker], [f_empty]]) do
   begin
     PrepareSoldier(1, ARSolSkill);
     PlaceHumanInUnit(CreateHuman, i);
   end;
end;

Export function HealUnitInBase(side, healArea, baseArea, build);
var sci_list, sci_listOutside,  i, j, damageUnits, unitsToHeal, tmp, rnd;
begin

  sci_list = FilterAllUnits([[f_side, side], [f_class, 4], [f_lives, 251]]);
  sci_listOutside = FilterUnitsInArea(baseArea, [[f_side, side], [f_class, 4], [f_ok]]);
  damageUnits = FilterUnitsInArea(baseArea, [[f_side, side], [f_type, unit_human], [f_not, [f_class, 3]], [f_not, [f_lives, 750]]]);
  unitsToHeal = FilterUnitsInArea(healArea,[[f_side, side], [f_type, unit_human], [f_not, [f_class, 3]], [f_not, [f_lives, 1000]]]);

  if not damageUnits and not sci_listOutside and not unitsToHeal then exit;

  if damageUnits > 0 and sci_list > 0 then
    for i in damageUnits do ComMoveToArea(i, healArea);

  if unitsToHeal > 0 and sci_list > 0 then
  begin
    for i in sci_list do
    begin

      ComExitBuilding(i);

      for j in unitsToHeal do AddComHeal(i, j);
    end;
  end;

  if damageUnits = 0 and unitsToHeal = 0 and sci_listOutside > 0 then
      for i in sci_listOutside do
      begin
          tmp = FilterAllUnits([[f_side, side], [f_type, unit_building], [f_btype, b_lab_full]]);
          rnd = rand(1, tmp);
          ComEnterUnit(i, tmp[rnd]);
      end;

END;

Export function RepairBuilding(side, building);
var buildings_list, i,engineerOkInside, engineerOkOutside, j;
begin

  engineerOkInside = UnitsInside(building);
  engineerOkOutside = FilterAllUnits([[f_side, side], [f_class, 2], [f_lives, 1000], [f_not, [f_inside]]]);
  buildings_list = FilterAllUnits([[[f_side, side], [f_type, unit_building], [f_not, [f_lives, 1000]]]]);

  if not buildings_list and not engineerOkOutside then exit;

  if buildings_list > 0 and engineerOkInside then
     for i in FilterAllUnits([[f_side, side], [f_class, 2]]) do ComExitBuilding(i);

  if buildings_list > 0  and engineerOkOutside > 0 then
  begin

    for i in engineerOkOutside do
      for j in buildings_list do
          ComRepairBuilding(i, j[1]);

  end;

  if buildings_list = 0 and engineerOkOutside > 0 then
      for i in engineerOkOutside do ComEnterUnit(i, building);
END;

export ARWeapons, ARSolSkill, ARMechSkill, ARMinVehCount, ARMaxVehCount, ARMinSolCount, ARMaxSolCount, ARMinMortarCount, ARMaxMortarCount, ARAttackIntervale;
export MercAggressivenessLevel;

export function SetMercenaryAggressivenessLevel(level);
begin
  Case level of
  1: begin
       MercAggressivenessLevel := 1;
       ARWeapons := [24, 23, 22];
       ARSolSkill := 6;
       ARMechSkill := 6;
       ARMinVehCount := 1;
       ARMaxVehCount := 2;
       ARMinSolCount := 1;
       ARMaxSolCount := 3;
       ARMinMortarCount := 0;
       ARMaxMortarCount := 0;
       ARAttackIntervale := [4$0, 5$0];
     end;
  2: begin
       MercAggressivenessLevel := 2;
       ARWeapons := [24, 23, 25, 26];
       ARSolSkill := 6;
       ARMechSkill := 6;
       ARMinVehCount := 1;
       ARMaxVehCount := 2;
       ARMinSolCount := 1;
       ARMaxSolCount := 4;
       ARMinMortarCount := 0;
       ARMaxMortarCount := 0;
       ARAttackIntervale := [4$0, 5$0];
     end;
  3: begin
       MercAggressivenessLevel := 3;
       ARWeapons := [25, 26, 27];
       ARSolSkill := 7;
       ARMechSkill := 7;
       ARMinVehCount := 2;
       ARMaxVehCount := 3;
       ARMinSolCount := 2;
       ARMaxSolCount := 4;
       ARMinMortarCount := 0;
       ARMaxMortarCount := 0;
       ARAttackIntervale := [3$30, 4$30];
     end;
  4: begin
       MercAggressivenessLevel := 4;
       ARWeapons := [25, 26, 27, 29, 72];
       ARSolSkill := 7;
       ARMechSkill := 7;
       ARMinVehCount := 2;
       ARMaxVehCount := 4;
       ARMinSolCount := 3;
       ARMaxSolCount := 5;
       ARMinMortarCount := 0;
       ARMaxMortarCount := 1;
       ARAttackIntervale := [3$30, 4$30];
     end;
  5: begin
       MercAggressivenessLevel := 5;
       ARWeapons := [25, 26, 27, 28, 29, 72];
       ARSolSkill := 8;
       ARMechSkill := 8;
       ARMinVehCount := 2;
       ARMaxVehCount := 5;
       ARMinSolCount := 3;
       ARMaxSolCount := 5;
       ARMinMortarCount := 0;
       ARMaxMortarCount := 2;
       ARAttackIntervale := [3$00, 4$00];
     end;
  6: begin
       MercAggressivenessLevel := 6;
       ARWeapons := [25, 26, 27, 28, 29, 72, 73];
       ARSolSkill := 8;
       ARMechSkill := 8;
       ARMinVehCount := 3;
       ARMaxVehCount := 6;
       ARMinSolCount := 4;
       ARMaxSolCount := 7;
       ARMinMortarCount := 1;
       ARMaxMortarCount := 3;
       ARAttackIntervale := [4$0, 5$0];
     end;
  7: begin
       MercAggressivenessLevel := 7;
       ARWeapons := [26, 28, 29, 72, 73];
       ARSolSkill := 9;
       ARMechSkill := 9;
       ARMinVehCount := 3;
       ARMaxVehCount := 7;
       ARMinSolCount := 5;
       ARMaxSolCount := 8;
       ARMinMortarCount := 2;
       ARMaxMortarCount := 3;
       ARAttackIntervale := [4$0, 5$0];
     end;
  8: begin
       MercAggressivenessLevel := 8;
       ARWeapons := [26, 28, 29, 72, 73];
       ARSolSkill := 10;
       ARMechSkill := 10;
       ARMinVehCount := 4;
       ARMaxVehCount := 8;
       ARMinSolCount := 6;
       ARMaxSolCount := 9;
       ARMinMortarCount := 2;
       ARMaxMortarCount := 3;
       ARAttackIntervale := [4$0, 4$30];
     end;
  end;
end;